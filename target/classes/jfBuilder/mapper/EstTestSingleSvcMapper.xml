<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adtec.jfBuilder.dao.EstTestSingleSvcMapper" >
  <resultMap id="BaseResultMap" type="com.adtec.entity.EstTestSingleSvc" >
    <id column="single_svc_id" property="singleSvcId" jdbcType="CHAR" />
    <result column="project_id" property="projectId" jdbcType="CHAR" />
    <result column="single_svc_name" property="singleSvcName" jdbcType="CHAR" />
    <result column="single_svc_desc" property="singleSvcDesc" jdbcType="VARCHAR" />
    <result column="svc_id" property="svcId" jdbcType="CHAR" />
    <result column="time_out" property="timeOut" jdbcType="INTEGER" />
    <result column="think_time" property="thinkTime" jdbcType="INTEGER" />
    <result column="port_num" property="portNum" jdbcType="VARCHAR" />
    <result column="is_long" property="isLong" jdbcType="CHAR" />
    <result column="concrt_num" property="concrtNum" jdbcType="INTEGER" />
    <result column="inst_num" property="instNum" jdbcType="INTEGER" />
    <result column="check_class" property="checkClass" jdbcType="VARCHAR" />
    <result column="comm_class" property="commClass" jdbcType="VARCHAR" />
    <result column="crt_user" property="crtUser" jdbcType="CHAR" />
    <result column="crt_date_time" property="crtDateTime" jdbcType="CHAR" />
    <result column="lst_mod_user" property="lstModUser" jdbcType="CHAR" />
    <result column="lst_mod_date_time" property="lstModDateTime" jdbcType="CHAR" />
    <result column="single_svc_type" property="singleSvcType" jdbcType="CHAR" />
    <result column="fmt_length" property="fmtLength" jdbcType="INTEGER" />
    <result column="code_length" property="codeLength" jdbcType="INTEGER" />
    <result column="is_req_conf_store" property="isReqConfStore" jdbcType="CHAR" />
    <result column="key_store_path" property="keyStorePath" jdbcType="VARCHAR" />
    <result column="key_pass" property="keyPass" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.adtec.entity.EstTestSingleSvcWithBLOBs" extends="BaseResultMap" >
    <result column="data_xml" property="dataXml" jdbcType="LONGVARBINARY" />
    <result column="in_msg" property="inMsg" jdbcType="LONGVARBINARY" />
    <result column="out_msg" property="outMsg" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    single_svc_id, project_id, single_svc_name, single_svc_desc, svc_id, time_out, think_time, 
    port_num, is_long, concrt_num, inst_num, check_class, comm_class, crt_user, crt_date_time, 
    lst_mod_user, lst_mod_date_time, single_svc_type, fmt_length, code_length, is_req_conf_store, 
    key_store_path, key_pass
  </sql>
  <sql id="Blob_Column_List" >
    data_xml, in_msg, out_msg
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from est_test_single_svc
    where single_svc_id = #{singleSvcId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from est_test_single_svc
    where single_svc_id = #{singleSvcId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.adtec.entity.EstTestSingleSvcWithBLOBs" >
    insert into est_test_single_svc (single_svc_id, project_id, single_svc_name, 
      single_svc_desc, svc_id, time_out, 
      think_time, port_num, is_long, 
      concrt_num, inst_num, check_class, 
      comm_class, crt_user, crt_date_time, 
      lst_mod_user, lst_mod_date_time, single_svc_type, 
      fmt_length, code_length, is_req_conf_store, 
      key_store_path, key_pass, data_xml, 
      in_msg, out_msg)
    values (#{singleSvcId,jdbcType=CHAR}, #{projectId,jdbcType=CHAR}, #{singleSvcName,jdbcType=CHAR}, 
      #{singleSvcDesc,jdbcType=VARCHAR}, #{svcId,jdbcType=CHAR}, #{timeOut,jdbcType=INTEGER}, 
      #{thinkTime,jdbcType=INTEGER}, #{portNum,jdbcType=VARCHAR}, #{isLong,jdbcType=CHAR}, 
      #{concrtNum,jdbcType=INTEGER}, #{instNum,jdbcType=INTEGER}, #{checkClass,jdbcType=VARCHAR}, 
      #{commClass,jdbcType=VARCHAR}, #{crtUser,jdbcType=CHAR}, #{crtDateTime,jdbcType=CHAR}, 
      #{lstModUser,jdbcType=CHAR}, #{lstModDateTime,jdbcType=CHAR}, #{singleSvcType,jdbcType=CHAR}, 
      #{fmtLength,jdbcType=INTEGER}, #{codeLength,jdbcType=INTEGER}, #{isReqConfStore,jdbcType=CHAR}, 
      #{keyStorePath,jdbcType=VARCHAR}, #{keyPass,jdbcType=VARCHAR}, #{dataXml,jdbcType=LONGVARBINARY}, 
      #{inMsg,jdbcType=LONGVARBINARY}, #{outMsg,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.adtec.entity.EstTestSingleSvcWithBLOBs" >
    insert into est_test_single_svc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="singleSvcId != null" >
        single_svc_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="singleSvcName != null" >
        single_svc_name,
      </if>
      <if test="singleSvcDesc != null" >
        single_svc_desc,
      </if>
      <if test="svcId != null" >
        svc_id,
      </if>
      <if test="timeOut != null" >
        time_out,
      </if>
      <if test="thinkTime != null" >
        think_time,
      </if>
      <if test="portNum != null" >
        port_num,
      </if>
      <if test="isLong != null" >
        is_long,
      </if>
      <if test="concrtNum != null" >
        concrt_num,
      </if>
      <if test="instNum != null" >
        inst_num,
      </if>
      <if test="checkClass != null" >
        check_class,
      </if>
      <if test="commClass != null" >
        comm_class,
      </if>
      <if test="crtUser != null" >
        crt_user,
      </if>
      <if test="crtDateTime != null" >
        crt_date_time,
      </if>
      <if test="lstModUser != null" >
        lst_mod_user,
      </if>
      <if test="lstModDateTime != null" >
        lst_mod_date_time,
      </if>
      <if test="singleSvcType != null" >
        single_svc_type,
      </if>
      <if test="fmtLength != null" >
        fmt_length,
      </if>
      <if test="codeLength != null" >
        code_length,
      </if>
      <if test="isReqConfStore != null" >
        is_req_conf_store,
      </if>
      <if test="keyStorePath != null" >
        key_store_path,
      </if>
      <if test="keyPass != null" >
        key_pass,
      </if>
      <if test="dataXml != null" >
        data_xml,
      </if>
      <if test="inMsg != null" >
        in_msg,
      </if>
      <if test="outMsg != null" >
        out_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="singleSvcId != null" >
        #{singleSvcId,jdbcType=CHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=CHAR},
      </if>
      <if test="singleSvcName != null" >
        #{singleSvcName,jdbcType=CHAR},
      </if>
      <if test="singleSvcDesc != null" >
        #{singleSvcDesc,jdbcType=VARCHAR},
      </if>
      <if test="svcId != null" >
        #{svcId,jdbcType=CHAR},
      </if>
      <if test="timeOut != null" >
        #{timeOut,jdbcType=INTEGER},
      </if>
      <if test="thinkTime != null" >
        #{thinkTime,jdbcType=INTEGER},
      </if>
      <if test="portNum != null" >
        #{portNum,jdbcType=VARCHAR},
      </if>
      <if test="isLong != null" >
        #{isLong,jdbcType=CHAR},
      </if>
      <if test="concrtNum != null" >
        #{concrtNum,jdbcType=INTEGER},
      </if>
      <if test="instNum != null" >
        #{instNum,jdbcType=INTEGER},
      </if>
      <if test="checkClass != null" >
        #{checkClass,jdbcType=VARCHAR},
      </if>
      <if test="commClass != null" >
        #{commClass,jdbcType=VARCHAR},
      </if>
      <if test="crtUser != null" >
        #{crtUser,jdbcType=CHAR},
      </if>
      <if test="crtDateTime != null" >
        #{crtDateTime,jdbcType=CHAR},
      </if>
      <if test="lstModUser != null" >
        #{lstModUser,jdbcType=CHAR},
      </if>
      <if test="lstModDateTime != null" >
        #{lstModDateTime,jdbcType=CHAR},
      </if>
      <if test="singleSvcType != null" >
        #{singleSvcType,jdbcType=CHAR},
      </if>
      <if test="fmtLength != null" >
        #{fmtLength,jdbcType=INTEGER},
      </if>
      <if test="codeLength != null" >
        #{codeLength,jdbcType=INTEGER},
      </if>
      <if test="isReqConfStore != null" >
        #{isReqConfStore,jdbcType=CHAR},
      </if>
      <if test="keyStorePath != null" >
        #{keyStorePath,jdbcType=VARCHAR},
      </if>
      <if test="keyPass != null" >
        #{keyPass,jdbcType=VARCHAR},
      </if>
      <if test="dataXml != null" >
        #{dataXml,jdbcType=LONGVARBINARY},
      </if>
      <if test="inMsg != null" >
        #{inMsg,jdbcType=LONGVARBINARY},
      </if>
      <if test="outMsg != null" >
        #{outMsg,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.adtec.entity.EstTestSingleSvcWithBLOBs" >
    update est_test_single_svc
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=CHAR},
      </if>
      <if test="singleSvcName != null" >
        single_svc_name = #{singleSvcName,jdbcType=CHAR},
      </if>
      <if test="singleSvcDesc != null" >
        single_svc_desc = #{singleSvcDesc,jdbcType=VARCHAR},
      </if>
      <if test="svcId != null" >
        svc_id = #{svcId,jdbcType=CHAR},
      </if>
      <if test="timeOut != null" >
        time_out = #{timeOut,jdbcType=INTEGER},
      </if>
      <if test="thinkTime != null" >
        think_time = #{thinkTime,jdbcType=INTEGER},
      </if>
      <if test="portNum != null" >
        port_num = #{portNum,jdbcType=VARCHAR},
      </if>
      <if test="isLong != null" >
        is_long = #{isLong,jdbcType=CHAR},
      </if>
      <if test="concrtNum != null" >
        concrt_num = #{concrtNum,jdbcType=INTEGER},
      </if>
      <if test="instNum != null" >
        inst_num = #{instNum,jdbcType=INTEGER},
      </if>
      <if test="checkClass != null" >
        check_class = #{checkClass,jdbcType=VARCHAR},
      </if>
      <if test="commClass != null" >
        comm_class = #{commClass,jdbcType=VARCHAR},
      </if>
      <if test="crtUser != null" >
        crt_user = #{crtUser,jdbcType=CHAR},
      </if>
      <if test="crtDateTime != null" >
        crt_date_time = #{crtDateTime,jdbcType=CHAR},
      </if>
      <if test="lstModUser != null" >
        lst_mod_user = #{lstModUser,jdbcType=CHAR},
      </if>
      <if test="lstModDateTime != null" >
        lst_mod_date_time = #{lstModDateTime,jdbcType=CHAR},
      </if>
      <if test="singleSvcType != null" >
        single_svc_type = #{singleSvcType,jdbcType=CHAR},
      </if>
      <if test="fmtLength != null" >
        fmt_length = #{fmtLength,jdbcType=INTEGER},
      </if>
      <if test="codeLength != null" >
        code_length = #{codeLength,jdbcType=INTEGER},
      </if>
      <if test="isReqConfStore != null" >
        is_req_conf_store = #{isReqConfStore,jdbcType=CHAR},
      </if>
      <if test="keyStorePath != null" >
        key_store_path = #{keyStorePath,jdbcType=VARCHAR},
      </if>
      <if test="keyPass != null" >
        key_pass = #{keyPass,jdbcType=VARCHAR},
      </if>
      <if test="dataXml != null" >
        data_xml = #{dataXml,jdbcType=LONGVARBINARY},
      </if>
      <if test="inMsg != null" >
        in_msg = #{inMsg,jdbcType=LONGVARBINARY},
      </if>
      <if test="outMsg != null" >
        out_msg = #{outMsg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where single_svc_id = #{singleSvcId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.adtec.entity.EstTestSingleSvcWithBLOBs" >
    update est_test_single_svc
    set project_id = #{projectId,jdbcType=CHAR},
      single_svc_name = #{singleSvcName,jdbcType=CHAR},
      single_svc_desc = #{singleSvcDesc,jdbcType=VARCHAR},
      svc_id = #{svcId,jdbcType=CHAR},
      time_out = #{timeOut,jdbcType=INTEGER},
      think_time = #{thinkTime,jdbcType=INTEGER},
      port_num = #{portNum,jdbcType=VARCHAR},
      is_long = #{isLong,jdbcType=CHAR},
      concrt_num = #{concrtNum,jdbcType=INTEGER},
      inst_num = #{instNum,jdbcType=INTEGER},
      check_class = #{checkClass,jdbcType=VARCHAR},
      comm_class = #{commClass,jdbcType=VARCHAR},
      crt_user = #{crtUser,jdbcType=CHAR},
      crt_date_time = #{crtDateTime,jdbcType=CHAR},
      lst_mod_user = #{lstModUser,jdbcType=CHAR},
      lst_mod_date_time = #{lstModDateTime,jdbcType=CHAR},
      single_svc_type = #{singleSvcType,jdbcType=CHAR},
      fmt_length = #{fmtLength,jdbcType=INTEGER},
      code_length = #{codeLength,jdbcType=INTEGER},
      is_req_conf_store = #{isReqConfStore,jdbcType=CHAR},
      key_store_path = #{keyStorePath,jdbcType=VARCHAR},
      key_pass = #{keyPass,jdbcType=VARCHAR},
      data_xml = #{dataXml,jdbcType=LONGVARBINARY},
      in_msg = #{inMsg,jdbcType=LONGVARBINARY},
      out_msg = #{outMsg,jdbcType=LONGVARBINARY}
    where single_svc_id = #{singleSvcId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adtec.entity.EstTestSingleSvc" >
    update est_test_single_svc
    set project_id = #{projectId,jdbcType=CHAR},
      single_svc_name = #{singleSvcName,jdbcType=CHAR},
      single_svc_desc = #{singleSvcDesc,jdbcType=VARCHAR},
      svc_id = #{svcId,jdbcType=CHAR},
      time_out = #{timeOut,jdbcType=INTEGER},
      think_time = #{thinkTime,jdbcType=INTEGER},
      port_num = #{portNum,jdbcType=VARCHAR},
      is_long = #{isLong,jdbcType=CHAR},
      concrt_num = #{concrtNum,jdbcType=INTEGER},
      inst_num = #{instNum,jdbcType=INTEGER},
      check_class = #{checkClass,jdbcType=VARCHAR},
      comm_class = #{commClass,jdbcType=VARCHAR},
      crt_user = #{crtUser,jdbcType=CHAR},
      crt_date_time = #{crtDateTime,jdbcType=CHAR},
      lst_mod_user = #{lstModUser,jdbcType=CHAR},
      lst_mod_date_time = #{lstModDateTime,jdbcType=CHAR},
      single_svc_type = #{singleSvcType,jdbcType=CHAR},
      fmt_length = #{fmtLength,jdbcType=INTEGER},
      code_length = #{codeLength,jdbcType=INTEGER},
      is_req_conf_store = #{isReqConfStore,jdbcType=CHAR},
      key_store_path = #{keyStorePath,jdbcType=VARCHAR},
      key_pass = #{keyPass,jdbcType=VARCHAR}
    where single_svc_id = #{singleSvcId,jdbcType=CHAR}
  </update>
</mapper>