<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adtec.jfBuilder.dao.EstSvcLogicProcMapper" >
  <resultMap id="BaseResultMap" type="com.adtec.entity.EstSvcLogicProc" >
    <id column="service_id" property="serviceId" jdbcType="CHAR" />
    <id column="flow_id" property="flowId" jdbcType="CHAR" />
    <id column="step_no" property="stepNo" jdbcType="SMALLINT" />
    <result column="step_flag" property="stepFlag" jdbcType="SMALLINT" />
    <result column="step_proc" property="stepProc" jdbcType="VARCHAR" />
    <result column="comps_flag" property="compsFlag" jdbcType="SMALLINT" />
    <result column="ignore_flag" property="ignoreFlag" jdbcType="SMALLINT" />
    <result column="max_syn_num" property="maxSynNum" jdbcType="SMALLINT" />
    <result column="max_asyn_num" property="maxAsynNum" jdbcType="SMALLINT" />
    <result column="comps_init_proc" property="compsInitProc" jdbcType="CHAR" />
    <result column="comps_end_proc" property="compsEndProc" jdbcType="CHAR" />
    <result column="bef_proc" property="befProc" jdbcType="CHAR" />
    <result column="aft_proc" property="aftProc" jdbcType="CHAR" />
    <result column="fail_proc" property="failProc" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    service_id, flow_id, step_no, step_flag, step_proc, comps_flag, ignore_flag, max_syn_num, 
    max_asyn_num, comps_init_proc, comps_end_proc, bef_proc, aft_proc, fail_proc
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.adtec.entity.EstSvcLogicProcKey" >
    select 
    <include refid="Base_Column_List" />
    from est_svc_logic_proc
    where service_id = #{serviceId,jdbcType=CHAR}
      and flow_id = #{flowId,jdbcType=CHAR}
      and step_no = #{stepNo,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.adtec.entity.EstSvcLogicProcKey" >
    delete from est_svc_logic_proc
    where service_id = #{serviceId,jdbcType=CHAR}
      and flow_id = #{flowId,jdbcType=CHAR}
      and step_no = #{stepNo,jdbcType=SMALLINT}
  </delete>
  <insert id="insert" parameterType="com.adtec.entity.EstSvcLogicProc" >
    insert into est_svc_logic_proc (service_id, flow_id, step_no, 
      step_flag, step_proc, comps_flag, 
      ignore_flag, max_syn_num, max_asyn_num, 
      comps_init_proc, comps_end_proc, bef_proc, 
      aft_proc, fail_proc)
    values (#{serviceId,jdbcType=CHAR}, #{flowId,jdbcType=CHAR}, #{stepNo,jdbcType=SMALLINT}, 
      #{stepFlag,jdbcType=SMALLINT}, #{stepProc,jdbcType=VARCHAR}, #{compsFlag,jdbcType=SMALLINT}, 
      #{ignoreFlag,jdbcType=SMALLINT}, #{maxSynNum,jdbcType=SMALLINT}, #{maxAsynNum,jdbcType=SMALLINT}, 
      #{compsInitProc,jdbcType=CHAR}, #{compsEndProc,jdbcType=CHAR}, #{befProc,jdbcType=CHAR}, 
      #{aftProc,jdbcType=CHAR}, #{failProc,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.adtec.entity.EstSvcLogicProc" >
    insert into est_svc_logic_proc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="flowId != null" >
        flow_id,
      </if>
      <if test="stepNo != null" >
        step_no,
      </if>
      <if test="stepFlag != null" >
        step_flag,
      </if>
      <if test="stepProc != null" >
        step_proc,
      </if>
      <if test="compsFlag != null" >
        comps_flag,
      </if>
      <if test="ignoreFlag != null" >
        ignore_flag,
      </if>
      <if test="maxSynNum != null" >
        max_syn_num,
      </if>
      <if test="maxAsynNum != null" >
        max_asyn_num,
      </if>
      <if test="compsInitProc != null" >
        comps_init_proc,
      </if>
      <if test="compsEndProc != null" >
        comps_end_proc,
      </if>
      <if test="befProc != null" >
        bef_proc,
      </if>
      <if test="aftProc != null" >
        aft_proc,
      </if>
      <if test="failProc != null" >
        fail_proc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serviceId != null" >
        #{serviceId,jdbcType=CHAR},
      </if>
      <if test="flowId != null" >
        #{flowId,jdbcType=CHAR},
      </if>
      <if test="stepNo != null" >
        #{stepNo,jdbcType=SMALLINT},
      </if>
      <if test="stepFlag != null" >
        #{stepFlag,jdbcType=SMALLINT},
      </if>
      <if test="stepProc != null" >
        #{stepProc,jdbcType=VARCHAR},
      </if>
      <if test="compsFlag != null" >
        #{compsFlag,jdbcType=SMALLINT},
      </if>
      <if test="ignoreFlag != null" >
        #{ignoreFlag,jdbcType=SMALLINT},
      </if>
      <if test="maxSynNum != null" >
        #{maxSynNum,jdbcType=SMALLINT},
      </if>
      <if test="maxAsynNum != null" >
        #{maxAsynNum,jdbcType=SMALLINT},
      </if>
      <if test="compsInitProc != null" >
        #{compsInitProc,jdbcType=CHAR},
      </if>
      <if test="compsEndProc != null" >
        #{compsEndProc,jdbcType=CHAR},
      </if>
      <if test="befProc != null" >
        #{befProc,jdbcType=CHAR},
      </if>
      <if test="aftProc != null" >
        #{aftProc,jdbcType=CHAR},
      </if>
      <if test="failProc != null" >
        #{failProc,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.adtec.entity.EstSvcLogicProc" >
    update est_svc_logic_proc
    <set >
      <if test="stepFlag != null" >
        step_flag = #{stepFlag,jdbcType=SMALLINT},
      </if>
      <if test="stepProc != null" >
        step_proc = #{stepProc,jdbcType=VARCHAR},
      </if>
      <if test="compsFlag != null" >
        comps_flag = #{compsFlag,jdbcType=SMALLINT},
      </if>
      <if test="ignoreFlag != null" >
        ignore_flag = #{ignoreFlag,jdbcType=SMALLINT},
      </if>
      <if test="maxSynNum != null" >
        max_syn_num = #{maxSynNum,jdbcType=SMALLINT},
      </if>
      <if test="maxAsynNum != null" >
        max_asyn_num = #{maxAsynNum,jdbcType=SMALLINT},
      </if>
      <if test="compsInitProc != null" >
        comps_init_proc = #{compsInitProc,jdbcType=CHAR},
      </if>
      <if test="compsEndProc != null" >
        comps_end_proc = #{compsEndProc,jdbcType=CHAR},
      </if>
      <if test="befProc != null" >
        bef_proc = #{befProc,jdbcType=CHAR},
      </if>
      <if test="aftProc != null" >
        aft_proc = #{aftProc,jdbcType=CHAR},
      </if>
      <if test="failProc != null" >
        fail_proc = #{failProc,jdbcType=CHAR},
      </if>
    </set>
    where service_id = #{serviceId,jdbcType=CHAR}
      and flow_id = #{flowId,jdbcType=CHAR}
      and step_no = #{stepNo,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adtec.entity.EstSvcLogicProc" >
    update est_svc_logic_proc
    set step_flag = #{stepFlag,jdbcType=SMALLINT},
      step_proc = #{stepProc,jdbcType=VARCHAR},
      comps_flag = #{compsFlag,jdbcType=SMALLINT},
      ignore_flag = #{ignoreFlag,jdbcType=SMALLINT},
      max_syn_num = #{maxSynNum,jdbcType=SMALLINT},
      max_asyn_num = #{maxAsynNum,jdbcType=SMALLINT},
      comps_init_proc = #{compsInitProc,jdbcType=CHAR},
      comps_end_proc = #{compsEndProc,jdbcType=CHAR},
      bef_proc = #{befProc,jdbcType=CHAR},
      aft_proc = #{aftProc,jdbcType=CHAR},
      fail_proc = #{failProc,jdbcType=CHAR}
    where service_id = #{serviceId,jdbcType=CHAR}
      and flow_id = #{flowId,jdbcType=CHAR}
      and step_no = #{stepNo,jdbcType=SMALLINT}
  </update>
</mapper>